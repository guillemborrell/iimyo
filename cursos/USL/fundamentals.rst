Programming Fundamentals
========================

This is our starting point: parsing

.. code-block:: matlab

  >> a = 1;

We can find three different elements in this line of code:

* ``a`` is a variable

* ``=`` is the assignment operator

* ``1`` is a literal meaning the number 1.

A variable is a single word that cannot use some very few reserved
characters like ``+``, ``-`` or ``:``.  We must choose a meaningful
word for our algorithm, for instance: if we must do some calculations
with a velocity, a suitable variable name might be ``v``.  After the
assignment, the result on the right hand side of the ``=`` operator is
assigned to the variable on the left.

Now we have a mechanism to store anything no matter if it is a literal
or a computation with other variables.  This is the essence of
programming: computing with memory and storing the result for further
computations.  There are many open questions now. What are we actually
computing? How are the numbers stored in memory? etc. We will try to answer
them all later.

.. important::

  Matlab distinguishes between lowercase and uppercase in variable
  names.  Therefore the names ``v`` and ``V`` will be always two
  different variables.

To help us in interactive sessions Matlab defines a special variable
called ``ans``.  When a computation is not assigned to any variable
(there is no assignment operator) Matlab automatically stores the
result in this variable.  This variable is overwritten every time this
process is repeated.

Matlab is a programming language
--------------------------------

Matlab is a programming language, a set of rules to write computer
programs.  Matlab is a domain specific computer language, it was
designed to be used in Numerical Analysis.  Its name stands for MATrix
LABoratory.

From an aesthetical and practical point of view Matlab is suitable for
quick computations.  Matlab is unsuitable for:

* Implementation of complex algorithms with many datatypes with a
  complex hierarchy.  Despite Matlab can define classes it cannot be
  considered an object oriented language and lacks some features we
  can find in some modern computer languages like Python, Ruby, C++,
  Erlang and many others.

* High performance computing.  HPC is a case of extreme use of
  computer resources.  Matlab performs decently in most cases but an
  experienced programmer can speed up an algorithm by a factor of 10
  using a high performance statically typed language like C or
  Fortran.

* Big software frameworks.  Matlab is not a good choice for any
  computer program that grows beyond several thousand lines.  It is
  difficult to find a single reason for that. We could say that its
  syntax is not scalable.

Matlab has strong and dynamic typing, this means that every single
piece of data stored in memory has a type but variables can change its
type during the program execution.

Matlab is an interpreted language
---------------------------------

There are two ways of telling the computer what to do.  The first one
is to tell him speaking his own language called assembler.  Most of
times this assembler is generated by a compiler that understands some
high level code.  But there is a second way: using an interpreter.

An interpreter is a program that is able to translate an order to
something that the computer can understand.  A compiler takes the
code, parses it and translates it to assembler but an interpreter
understands and translates every single order and, in some cases, this
process is interactive.

Interpreted languages tend to be dynamic and interactive hence easier
than compiled languages.  This is why for quick and dirty computations
we would always choose Matlab instead of C or Fortran.

The Octave interpreter for the Matlab programming language
..........................................................

Once we think about Matlab only as a programming language the
existence of the Octave interpreter becomes obvious.  Many people had
the need to use the Matlab programming language and they either could
not afford the original Matlab interpreter or they think about freedom
as an essential need in software.  Octave cannot interpret the Matlab
language just like the Matlab interpreter would because Octave
developers are shooting a moving target.  The biggest difference
between them is that, while Matlab is an integrated development
environment Octave is just an interpreter.  If you want to use the
Octave interpreter you must use an external editor and browser.

Octave has an enthusiastic group of brilliant developers and a huge
community of users.  If you have any trouble using Octave I recommend
you to use their mailing list.  You can find more information in
http://www.octave.org.  Octave runs in almost every operating system
including Linux, Windows, MacOS X and Solaris.

.. note::

  Octave is becoming more important nowadays because of grid and cloud
  computing.  The grid is a set of middleware that abstracts the
  resources as single entities and aggregates them on a "cloud".  The
  end user asks for a resource and the grid chooses the most suitable
  one given the user, the job and the infrastructure.  This means that
  no one knows where the job was actually executed.  Some grids have
  tens of thousands of nodes, this means that if I want to run Matlab
  I need at least an idle node with Matlab.  Matlab licenses are quite
  expensive and most of grid sites don't consider them a
  priority. Octave is a serious alternative for them.

Modern Programming Languages
----------------------------

Computers changed everything.  They were invented to help us with
repetitive tasks but now they are part of any single aspect of our
life.  The first computer every installed in Spain was an IBM
mainframe that supported our tax system, now there are more cellphones
than inhabitants.  But a computer is something void without software,
and any piece of code is written in a programming language.

There are hundreds of programming languages, but only very few become
widely used.  Maybe you have heard about C, C++ or Java.  But there
are many others: Python, Ruby, Perl, Erlang, Lua, C#, Fortran,
Haskell, Effiel, Smalltalk, Javascript, Ocaml, Ada...  All of them are
used by thousands of people.  Let's talk about some of them.

Google uses only four programming languages: C++, Java, Javascript and
Python, maybe you've never heard about the last one.  Python is maybe
the simplest and most consistent programming language.  It is
straightforward, easy to learn and has all the goodies expected in a
modern programming language: object orientation, modularity,
iterators, list comprehensions, a huge standard library...  It is said
that Python is too simple that should never be learnt as the first
programming language.  And last but not least: it is free software:
http://python.org.

Fortran was the first high level programming language and it's still
the language of choice for most scientists and engineers for high
performance computing.  Since its creation in the late '50 it has seen
half a dozen of revisions, the last standard is called Fortran 2008.
If you hear anyone saying that Fortran is an obsolete language that is
only used to maintain legacy code it is because he has never tried it
at all.

There is a very special language intended for graphics and animation
called Processing.  It was developed by Casey Reas and Ben Fry in the
MIT MediaLab.  While most programming languages are focused in
productivity and performance, processing is designed to implement your
thoughts as a form of art.  It is worth trying.
